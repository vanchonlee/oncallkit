# ========================================
# NULL HANDLING FIX TEST
# ========================================
# This file tests that NULL values in database are handled properly

### 1. Test List Users (should handle NULL fcm_token and phone)
GET http://localhost:8080/users HTTP/1.1

### 2. Test Get Specific User (admin user)
GET http://localhost:8080/users/admin-user-id-001 HTTP/1.1

### 3. Test Login (should handle NULL fcm_token)
POST http://localhost:8080/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "admin@slar.com",
    "password": "admin123"
}

### 4. Test Get Current On-Call User (should handle NULL values)
GET http://localhost:8080/oncall/current HTTP/1.1

### 5. Create User with minimal fields (test NULL handling)
POST http://localhost:8080/users HTTP/1.1
Content-Type: application/json

{
    "name": "Test User Minimal",
    "email": "minimal@test.com",
    "role": "engineer",
    "team": "Test Team"
}

### 6. Create User with all fields
POST http://localhost:8080/users HTTP/1.1
Content-Type: application/json

{
    "name": "Test User Full",
    "email": "full@test.com",
    "phone": "+1234567890",
    "role": "engineer",
    "team": "Test Team",
    "fcm_token": "test_fcm_token_123",
    "password_hash": "testpass123"
}

### 7. Login with new user
POST http://localhost:8080/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "full@test.com",
    "password": "testpass123"
}

# ========================================
# EXPECTED RESULTS
# ========================================
# All requests should return 200 OK without scan errors
# NULL values should be converted to empty strings
# No "converting NULL to string is unsupported" errors 